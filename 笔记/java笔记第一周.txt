                           由于我学过，所以笔记就是记一些忘掉的和当时没学到的东西：
*jdk，jre这些环境变量啥的我感觉会搭建就行
*JDK、JRE、JVM的关系
1. JDK=JRE+Java开发工具
2. JRE=JVM+Java核心类库
*环境变量作用
1．环境变量的作用是为了在dos的任意目录，可以去使用java 和 javac命令
2.先配置JAVA_HOME =指向jdk安装的主目录
3.编辑path环境变量,增加%JAVA_HOME%
*jdk中编写java
1．编写java的源代码
2. javac编译,得到对应的 .class字节码文件
3. java 运行，本质就是把.class加载到jvm运行
*注意事项
1．类,方法的注释，使用javadoc的方式，即文档注释
2．非javadoc注释，往往是对代码的说明(给程序的维护者)，说明如何修改，注意事项
3．使用tab ，整体将代码右移,使用shift+tab整体左移
4.运算符和=的两边，给空格，代码看上去清楚int n= 1 + 4;
5.源码文件使用utf-8编码
6.行宽字符不要超过80
7.代码编程风格有两种次行风格,行尾风格(推荐)
8.编译或者运行时，找不到文件javac Helle.java，把文件名或者目录找对
9·主类名和文件名不一致,修改时保持一致即可
10.缺少;
11.拼写错误，比如1 -> l   0->o,void -> viod ,要求写代码时，一定要小心
dos系统知道就行
*路径
1.相对路径：从当前目录开始定位形成的路径    在某个文件位置下找其他位置的目录用..\跳到当前目录的上一次
2.绝对路径：从根目录开始定位形成的路径      在某个文件位置下找文件时直接从根目录逐级输入
*cmd中，执行java命令与javac命令的区别：
javac：是编译命令，将java源文件编译成.class字节码文件。
例如：javac hello.java
将生成hello.class文件。
java：是运行字节码文件；由java虚拟机对字节码进行解释和运行。
例如：java hello
*加号可以数字也可以字符串也可以字符串加数字，只要有一方为字符那就是拼接
System.out.printLine("aaaa"+2) 结果为aaaa2
*转义字符
1. \t 一个制表位实现对齐的功能
2.\n   换行
3.\\   输出\
4.\"   输出"
5.\r   回车
*变量
名称 类型 值
变量的作用域指变量起作用的范围，说明变量在什么部分可以被访问；
*基本数据类型
1整数型：byte（1个字节），short(2)，int（4），long（8）
2浮点型：float（4）  ，double（8）
3布尔型：boolean（1）
4字符型：char(2)
其中字节就是用来规定存储空间的，n个字节大小在负的（2的（8*n-1）次）到正的（2的（8*n-1）次-1）之间
*引用数据类型
1.接口interface
2.类 class
3.数组
*浮点型精度
浮点数的存放形式说明 : 浮点数=符号位 + 指数位+尾数位
尾数部分可能丢失 , 造成精度损失（小数都是近似值）, 因此要存在精度
*字符类型使用细节
1．字符常量是用单引号(‘’)括起来的单个字符。例如:char c1 = 'a'; char c2='中'; char c3 = '9';
2.Java中还允许使用转义字符来将其后的字符转变为特殊字符型常量。例如:char c3= '\n';// '\n'表示换行符
3．在java中,char的本质是一个整数，在输出时，是unicode码对应的字符。
4.可以直接给char赋一个整数,然后输出时,会按照对应的unicode字符输出
5. char类型是可以进行运算的,相当于一个整数，因为它都对应有Unicode码.
*介绍一下字符编码表
ASCII (ASCII编码表一个字节表示，一个128个字符)
Unicode (Unicode编码表固定大小的编码使用两个字节来表示字符，字母和汉字统一都是字节,这样浪费空间)
utf-8(编码表，大小可变的编码字母使用1个字节，汉字使用3个字节)gbk(可以表示汉字,而且范围广，字母使用1个字节，汉字2个字节)gb2312(可以表示汉字,gb2312< gbk)
big5码(繁体中文,台湾，香港)
*数据类型转换
1．隐式(自动)转化
将一个表示范围小的变量赋值给一个表示范围大的变量。
char-->int-->long-->float-->double
byte-->short-->int   byte和short不能跟char自动转换，这三者可以进行计算但要统一转换成int之后
2．显式(强制)转化
将一个表示范围大的变量赋值给一个表示范围小的变量。可能会导致精度损失。
*自己举个例子 强制转换
例：int  a ;
long  b ;
char  c;
b = a ;       //自动转换
a = ( int ) b ;        //强制类型转换
c= (char) a ;   a=(int) c       //强制类型转换
*基本数据类型跟字符串转换
基本-->String ：将基本类型加上引号
String-->基本：通过基本类型的包装类调用parse.xxx方法就行
**运算符
运算符是一种特殊的符号,用以表示数据的运算、赋值和比较 。
1算术运算符2赋值运算符3关系运算符（比较运算符）4逻辑运算符 5位运算符 6三元运算符
* ++使用
1作为表达式使用：i++ 是先赋值后自增， ++i 是先自增后赋值
2作为独立的使用i++和++i都等价于i = i + 1
*关系运算符（不记得的）
instanceof 检查是否是类的对象   如  "lala" instanceof String 返回true或false
*逻辑运算符
短路与&& 短路或|| 取反 ！ 
逻辑与&  逻辑或|  逻辑异或^
&&与&区别： &&前面的条件1为假则不会执行，&前面条件1无论真假，条件2都会判断，都成立就会执行
||与|的区别：||前面的条件1为真则后面不会判断，直接执行。|前面条件无论真假，条件2都会判断，效率低
a^b:逻辑异或 相同时为false，不同为true  同为0，不同为1
三元运算符：条件表达式?表达式1:表达式2;
1.如果条件表达式为true，运算后的结果是表达式1;2.如果条件表达式为false，运算后的结果是表达式2;
*运算符优先级
1.运算符有不同的优先级，所谓优先级就是表达式运算中的运算顺序。
2.只有单目运算符、赋值运算符是从右向左运算的。
运算符优先级图见pdf  上一行运算符总优先于下一行。
*标识符命名规则
1.由26个英文字母大小写，0-9，_或$组成   如h$4就是可行的
2.数字不可以开头。int 3ab =1;
3.不可以使用关键字和保留字，但能包含关键字和保留字。
4. Java中严格区分大小写，长度无限制。int totalNum = 10; int n = 90;
5．标识符不能包含空格。int a b = 90;
*进制介绍
进制介绍
对于整数，有四种表示方式:
1.二进制:0.1,满2进1.以0b或0B开头。
2.十进制:0-9,满10进1。
3.八进制:0-7，满8进1.以数字0开头表示。
4.十六进制:0-9及A(10)-F(15)，满16进1.以Ox或OX开头表示。此处的A-F不区分大小写。
转换图在pdf
*原码，反码，补码
1.对于有符号的而言:二进制的最高位是符号位 : 0 表示正 , 1 表示 负 
2.正数的原码 ,反码,补码都一样 
3. 负数的反码=原码符号位不变 ,其他位取反 ( 0 -> 1 , 1 ->0 ) 
4. 负数的补码=反 码 + 1 , 负 数 的 反 码 = 补 码 - 1
5. 0的反码,补码都是0
6. java没有无符号数 , java中所有数都有符号
7.在计算机运算的时候都是以补码的方式运算的
8.当我们看运算结果时要看原码
*位运算符看pdf





